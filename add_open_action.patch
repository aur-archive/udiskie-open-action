--- src/udiskie-0.6.3/udiskie/notify.py	2013-12-26 03:10:09.000000000 +0100
+++ /tmp/udiskie2/src/udiskie-0.6.3/udiskie/notify.py	2014-03-05 08:21:45.879424747 +0100
@@ -3,6 +3,8 @@
 """
 __all__ = ['Notify']
 
+import subprocess
+
 class Notify(object):
     """
     Notification tool.
@@ -11,6 +13,15 @@
     notifications when system status has changed.
 
     """
+
+    # List of notifications with actions. Otherwise they go out of scope and fail
+    notifications = []
+
+    # Open action callback
+    def action_open_cb(self, notification, action):
+        subprocess.call(["xdg-open", action])
+        self.notifications.remove(notification)
+    
     def __init__(self, notify):
         """
         Initialize notifier.
@@ -24,17 +35,20 @@
     def device_mounted(self, device):
         label = device.id_label
         mount_path = device.mount_paths[0]
-        self.notify.Notification(
-            'Device mounted',
-            '%s mounted on %s' % (label, mount_path),
-            'drive-removable-media').show()
+        notification = self.notify.Notification(
+            'Volumen montado',
+            'El volumen "%s" ha sido montado autom√°ticamente' % (label),
+            'drive-removable-media')
+        notification.add_action(mount_path.encode("ascii"), "Abrir", self.action_open_cb)
+        notification.show()
+        self.notifications.append(notification)
 
     def device_unmounted(self, device):
         label = device.id_label
-        self.notify.Notification(
-            'Device unmounted',
-            '%s unmounted' % (label,),
-            'drive-removable-media').show()
+        #self.notify.Notification(
+        #    'Device unmounted',
+        #    '%s unmounted' % (label,),
+        #    'drive-removable-media').show()
 
     def device_locked(self, device):
         device_file = device.device_presentation
